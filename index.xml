<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notebook</title><link>https://0xffsec.com/notebook/</link><description>Recent content on Notebook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://0xffsec.com/notebook/index.xml" rel="self" type="application/rss+xml"/><item><title>Preface</title><link>https://0xffsec.com/notebook/preface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xffsec.com/notebook/preface/</guid><description>Preface Conventions Default Addresses Remote Host IP: 10.0.0.3 Remote CIDR Address: 10.0.0.0/24 Local Host IP: 10.0.0.1 Local Port Number: 1234 Typography italic
Indicates URLs, email addresses, filenames, and file extensions.
monospaced
For programming listings, as well as within paragraphs to refer to program elements such as variables or functions names, databases, data types, environment variables, statements, and keywords.
bold monospaced
Commands or other text that should be typed literally by the user.</description></item><item><title>FTP - 21</title><link>https://0xffsec.com/notebook/enumeration/ftp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xffsec.com/notebook/enumeration/ftp/</guid><description>FTP is a standard network protocol used for the transfer of files between a client and a server on a computer network.
FTP is built on a client-server architecture using separate control and data connections between the client and the server. FTP authenticates users with a clear-text sign-in protocol, normally in the form of a username and password, but can connect anonymously if the server is configured to allow it. 1</description></item><item><title>HTTP/S - 80 / 443</title><link>https://0xffsec.com/notebook/enumeration/http-https/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xffsec.com/notebook/enumeration/http-https/</guid><description>Directory Enumeration As a first step, while we browse the web/application, it is a good idea to do some files and directories enumeration, look for unlinked content, temporary directories, and backups.
Widely used tools include dirbuster, gobuster, dirb and the suite Burp.
Wordlists Included in Kali&amp;rsquo;s wordlists package.
dirbuster&amp;rsquo;s medium 2.3.
/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt dirb common.
/usr/share/wordlists/dirb/common.txt dirb big.
/usr/share/wordlists/dirb/common.txt Not included in Kali.
Jhaddix&amp;rsquo;s content_discovery_all.
https://gist.github.com/jhaddix/b80ea67d85c13206125806f0828f4d10
Daniel Miessler&amp;rsquo;s Robots Disallowed and SecLists (Includes the former one).</description></item><item><title>Host Discovery</title><link>https://0xffsec.com/notebook/discovery-and-scanning/host-discovery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xffsec.com/notebook/discovery-and-scanning/host-discovery/</guid><description>Host Discovery One of the first steps during the network enumeration is to reduce a set of IPs into a list of active or interesting hosts. Depending on if you are inside the network or scanning remotely, how much noise you can make, and your discovery requirements, different tools, and options are available.
Internal Passive Passive discovery relies on monitoring network layer traffic to detect network topology, services, and applications. The process does not generate any network traffic.</description></item><item><title>Port Scanning</title><link>https://0xffsec.com/notebook/discovery-and-scanning/port-scanning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xffsec.com/notebook/discovery-and-scanning/port-scanning/</guid><description>Port Scanning Let&amp;rsquo;s continue narrowing down our attack vector. It is time now to grab your host or list of hosts and scan for open ports and running services.
Port scanners can be categorized between synchronous or connection-oriented and asynchronous or connectionless.
Synchronous scanners, like Nmap, wait for a host response (until the timeout period expires) to determine if the port it&amp;rsquo;s alive. This translates to slower scans, especially on big network ranges, but an accurate port discovery in comparison with connectionless scanners.</description></item><item><title>SMB - 139 / 445</title><link>https://0xffsec.com/notebook/enumeration/smb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xffsec.com/notebook/enumeration/smb/</guid><description>SMB is a network communication protocol for providing shared access to files, printers, and serial ports between nodes on a network. It also provides an authenticated IPC (inter-process communication) mechanism.1
Windows SMB Ports and Protocols TL;DR
Port 139: SMB over NBT (NetBIOS over TCP/IP). port 445: SMB directly over TCP/IP. Originally, in Windows NT, SMB ran on top of NBT (NetBIOS over TCP/IP), which uses ports UDP 137 and 138, and TCP 139.</description></item><item><title>Exploits Search</title><link>https://0xffsec.com/notebook/exploits-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xffsec.com/notebook/exploits-search/</guid><description>Exploits Search Offline searchsploit 1 Periodically update the database with searchsploit -u. Search vulnerabilities based on a Nmap&amp;rsquo;s XML result.
searchsploit --nmap nmap.xml Basic search and copy the exploit the current directory.
For more examples, see the manual.
searchsploit afd windows local searchsploit -m 39446 Parameters -u: Check for and install any exploitdb package updates. -m: Copies an exploit to the current working directory. --nmap &amp;lt;xml file&amp;gt;: Checks all results in Nmap&amp;rsquo;s XML output with service version.</description></item><item><title>Reverse Shells</title><link>https://0xffsec.com/notebook/exploitation/shells/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xffsec.com/notebook/exploitation/shells/</guid><description>Reverse Shells After the exploitation of a remote code execution (RCE) vulnerability, the next step will be to interact with the compromised target. Reverse shells, as opposed to bind shells, initiate the connection from the remote host to the local host. They are especially handy and, sometimes the only way, to get remote access across a NAT or firewall.
The chosen shell will depend on the binaries installed on the target system, although uploading a binary can be possible.</description></item><item><title>SMB Protocol Negotiation Failed</title><link>https://0xffsec.com/notebook/notes/smb-protocol-negotiation-failed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xffsec.com/notebook/notes/smb-protocol-negotiation-failed/</guid><description>SMB Protocol Negotiation Failed Normally SMB takes care of choosing the appropriate protocol for each connection. However, if the offered protocols are out of client&amp;rsquo;s default range, it will return an error message like this:
Protocol negotiation failed: NT_STATUS_IO_TIMEOUT Solution Edit the connection protocol range in the client configuration file.
Add client min protocol and client max protocol settings to /etc/samba/smb.conf under [global].
# /etc/samba/smb.conf [global] client min protocol = CORE client max protocol = SMB3</description></item><item><title>SSH Legacy Key Exchange</title><link>https://0xffsec.com/notebook/notes/ssh-legacy-key-exchange/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xffsec.com/notebook/notes/ssh-legacy-key-exchange/</guid><description>SSH Legacy Key Exchange Algorithm1 When an SSH client connects to a server, each side offers sets of connection parameters to the other. For a successful connection, there must be at least one mutually compatible set for each parameter.
If the client and the server cannot agree on a mutual set, in this case, the key exchange algorithm, the connection will fail and OpenSSH will return an error message like this:</description></item></channel></rss>