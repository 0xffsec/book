'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/notebook/preface/','title':"Preface",'content':"Preface Conventions Typography italic\nIndicates URLs, email addresses, filenames, and file extensions.\nmonospaced\nFor programming listings, as well as within paragraphs to refer to program elements suck as variables or functions names, databases, data types, environment variables , statements, and keywords.\nbold monospaced\nCommands or other text that should be typed literally by the user.\nitalic monospaced\nText that should be replaced with user-supplied values or by values determined by context.\nHints This element signifies a tip or suggestion.  This element signifies a general note.  This element indicates a warning or caution.  Disclaimer Any actions and or activities related to the material contained within this Website are solely your responsibility. The misuse of the information on this website can result in criminal charges brought against the persons in question.\nThe authors will not be held responsible in the event any criminal charges be brought against any individuals misusing the information in this website to break the law.\n"});index.add({'id':1,'href':'/notebook/discovery-and-scanning/','title':"Discovery and Scanning",'content':""});index.add({'id':2,'href':'/notebook/discovery-and-scanning/host-discovery/','title':"Host Discovery",'content':"Host Discovery One of the first steps during the network enumeration is to reduce a set of IPs into a list of active or interesting hosts. Depending on if you are inside the network or scanning remotely, how much noise you can make, and your discovery requirements, different tools, and options are available.\nInternal Passive Passive discovery relies on monitoring network layer traffic to detect network topology, services, and applications. The process does not generate any network traffic.\nAlthough is a slow process compared to an active scan and unreliable for service enumeration, as no packets are injected in the network, there is no risk of unintentional service disruption. Giving the advantage of being able to find intermittently offered or protected services that are often missed by active scanning. 1\nnetdiscover - ARP sudo netdiscover -p  -p: passive mode. It does not send anything, but does only sniff.  p0f - Fingerprinting sudo p0f -p  -p: promiscuous mode; by default, it listens only to packet addressed or routed through.\nOn IP-enabled interfaces can be detected remotely.  Active In contrast, active discovery does inject a variety of packets into the network, making it well suited for open port discovery and fingerprinting. However, these techniques are not without drawbacks. Scans can be invasive, generate too much noise and, in some cases cause service interruptions due to the type of packets that may be sent.\nnetdiscover - ARP sudo netdiscover -r 10.0.0.0/24  -r \u0026lt;range\u0026gt;: scan a given range instead of auto scan.  Nmap nmap -sn 10.0.0.0/24  -sn: No port scan AKA ping scan. 2 Consists of an ICMP echo request, TCP SYN to port 443, TCP ACK to port 80, and an ICMP timestamp request by default.  nbtscan - NetBIOS sudo nbtscan 10.0.0.0/24 ICMP Refer to External ICMP Scanning\nExternal ICMP As defined in RFC 792, ICMP messages are typically used for diagnostic or control purposes or generated in response to errors in IP operations (as specified in RFC 1122).3\nAlthough it is possible to use ICMP requests to discover if a host is up or not, it is common to find all these packets being filtered, making it an unreliable method.\nping ping -c 1 10.0.0.1  -c \u0026lt;count\u0026gt;: stops after count replies.  fping fping -g 10.10.0.0/24  -g, --generate \u0026lt;target\u0026gt;: generates target list. target can be start and end IP or a CIDR address.  Nmap nmap -PEPM -sn -n 10.0.0.0/24   Parameters   -PE; -PP; -PM: ICMP echo, timestamp, and netmask request discovery probes. -sn: No port scan. -n: No DNS resolution.   Port Discovery Another commonly used technique is port scanning. It allows you to identify running services, consequently, interesting hosts. See Port Scanning.\nReference   Whyte, David. Network Scanning Detection Strategies for Enterprise Networks. Sept. 2008, pp. 12-22 https://pdfs.semanticscholar.org/bb60/dc6cf24ea1f17126511e0998d3c55bdd50f9.pdf. \u0026#x21a9;\u0026#xfe0e;\n “Host Discovery | Nmap Network Scanning.” Nmap: The Network Mapper - Free Security Scanner, https://nmap.org/book/man-host-discovery.html. \u0026#x21a9;\u0026#xfe0e;\n Forouzan, Behrouz A. Data Communications and Networking. Huga Media, 2007, pp. 621–630. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':3,'href':'/notebook/discovery-and-scanning/port-scanning/','title':"Port Scanning",'content':"Port Scanning Let\u0026rsquo;s continue narrowing down our attack vector. It is time now to grab your host or list of hosts and scan for open ports and running services.\nPort scanners can be categorized between synchronous or connection-oriented and asynchronous or connectionless.\nSynchronous scanners, like Nmap, wait for a host response (until the timeout period expires) to determine if the port it\u0026rsquo;s alive. This translates to slower scans, especially on big network ranges, but an accurate port discovery in comparison with connectionless scanners.\nAsynchronous scanners like scanrad, zmap, or masscan, on the other hand, don\u0026rsquo;t wait for a host response as they create separate threads for each port. This allows a high-speed scan, but less accurate since they cannot detect dropped packets.\nCombining both tools could help you find a balance between speed and accuracy for each engagement. 1\nNetwork Sweep masscan sudo masscan -p 7,9,13,21-23,25-26,37,53,79-81,88,106,110-111,113,119,135,139,143-144,179,199,389,427,443-445,465,513-515,543-544,548,554,587,631,646,873,990,993,995,1025-1029,1110,1433,1720,1723,1755,1900,2000-2001,2049,2121,2717,3000,3128,3306,3389,3986,4899,5000,5009,5051,5060,5101,5190,5357,5432,5631,5666,5800,5900,6000-6001,6646,7070,8000,8008-8009,8080-8081,8443,8888,9100,9999-10000,32768,49152-49157 --rate 50000 --wait 0 --open-only -oG masscan.gnmap 10.0.0.0/24   Parameters   -p \u0026lt;ports\u0026gt;: port(s) to be scanned. --rate \u0026lt;rate\u0026gt;: rate for transmitting packets (packet per seconds). --wait \u0026lt;seconds\u0026gt;: seconds after transmit is done to wait for receiving packets before exiting. Default 10 seconds. --open-only: report only open ports. -oG \u0026lt;filename\u0026gt;: output scan in grepable format to the given filename.   Host Scan TCP Fast 1000 ports scan sudo nmap -v -sV -sC -O -T4 -n -Pn -oA nmap_scan 10.0.0.10 Fast all ports scan sudo nmap -v -sV -sC -O -T4 -n -Pn -p- -oA nmap_fullscan 10.0.0.10 UDP During a UDP scan (-Su) -sV will send protocol-specific probes, aka nmap-service-probes, to every open|filtered port. In case of response the state change to open. 2\nsudo nmap -sU -sV --version-intensity 0 -n 10.0.0.0/24   Parameters   -v: verbose mode. -sU: UDP scan. -sV: determine service/version info. -sC: performs a script scan. -O: enable OS detection. -p \u0026lt;port ranges\u0026gt;: scan specific ports. --open: only show open ports. -Pn: no ping. -n: no DNS resolution. -T\u0026lt;0-5\u0026gt;: timing template. oX \u0026lt;filename\u0026gt;: output scan in XML format to the given filename. --version-intensity 0: try only the probes most likely to be effective.   Reference   Capt. Meelo. “Finding the Balance Between Speed \u0026amp; Accuracy During an Internet-Wide Port Scanning - Hack.Learn.Share.” Hack.Learn.Share, 29 July 2019, https://captmeelo.com/pentest/2019/07/29/port-scanning.html. \u0026#x21a9;\u0026#xfe0e;\n “UDP Scan (-SU) | Nmap Network Scanning.” Nmap: The Network Mapper - Free Security Scanner, https://nmap.org/book/scan-methods-udp-scan.html. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':4,'href':'/notebook/enumeration/','title':"Enumeration",'content':""});index.add({'id':5,'href':'/notebook/exploitation/','title':"Exploitation",'content':""});index.add({'id':6,'href':'/notebook/enumeration/ftp/','title':"21 - FTP",'content':"FTP (File Transfer Protocol) Default Port: 21 FTP is a standard network protocol used for the transfer of files between a client and a server on a computer network.\nFTP is built on a client-server architecture using separate control and data connections between the client and the server. FTP authenticates users with a clear-text sign-in protocol, normally in the form of a username and password, but can connect anonymously if the server is configured to allow it. 1\nBanner Grabbing Telnet telnet 10.0.0.3 21 Netcat nc -n 10.0.0.3 21 Nmap nmap -sV -script=banner -p21 -Pn 10.0.0.3 FTP ftp 10.0.0.3 Anonymous Login During the port scanning phase Nmap\u0026rsquo;s script scan (-sC), can be enabled to check for FTP Bounce and Anonymous Login.  Try anonymous login using anonymous:anonymous credentials.\nftp 10.0.0.3 ... Name (10.0.0.3:kali): anonymous 331 Please specify the password. Password: [anonymous] 230 Login successful. List all files in order.\nftp\u0026gt; ls -lat 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. ... 226 Directory send OK. FTP Browser Client Due to its insecure nature, FTP support is being dropped by Firefox and Google Chrome.  Try accessing ftp://user:pass@10.0.0.3 from your browser.\nIf not credentials provided anonymous:anonymous is assumed.\nBrute Forcing As an alternative to profiled passwords, Daniel Miessler\u0026rsquo;s SecLists includes a handy list of FTP default credentials.\nHydra Using a colon-separated user:pass list.\nhydra -v -C /usr/share/seclists/Passwords/Default-Credentials/ftp-betterdefaultpasslist.txt -f 10.0.0.3 ftp Using login user and passwords list.\nhydra -v -l ftp -P /usr/share/wordlists/rockyou.txt.gz -f 10.0.0.3 ftp   Parameters   -v: verbose mode. -C \u0026lt;user:pass file\u0026gt;: colon-separated \u0026ldquo;login:pass\u0026rdquo; format. -l \u0026lt;user\u0026gt;: login with user name. -P \u0026lt;passwords file\u0026gt;: login with password from file. -f: exit after the first found user/password pair.   Medusa Medusa\u0026rsquo;s combo files (colon-separated) should be in the format host:username:password. If any of the three values are missing, the respective information should be provided either as a global value or as a list in a file.\nsed s/^/:/ /usr/share/seclists/Passwords/Default-Credentials/ftp-betterdefaultpasslist.txt \u0026gt; /tmp/cplist.txt medusa -C /tmp/cplist.txt -h 10.0.0.3 -M ft Using login user and passwords list.\nmedusa -u ftp -P /usr/share/wordlists/rockyou.txt -h 10.0.0.3 -M ftp   Parameters   -u \u0026lt;user\u0026gt;: login with user name. -P \u0026lt;passwords file\u0026gt;: login with password from file. -h: target hostname or IP address. -M: module to execute.   Configuration files Examine configuration files.2\nftpusers ftp.conf proftpd.conf Tools and Tips Binary and ASCII Binary and ASCII files have to be uploading using the binary or ascii mode respectively, otherwise, the file will become corrupted. Use the corresponding command to switch between modes.3\nRecursively Download Recursively download FTP folder content.4\nwget -m ftp://user:pass@10.0.0.3/ Reference   Contributors to Wikimedia projects. “File Transfer Protocol - Wikipedia.” Wikipedia, the Free Encyclopedia, Wikimedia Foundation, Inc., 24 May 2002, https://en.wikipedia.org/wiki/File_Transfer_Protocol. \u0026#x21a9;\u0026#xfe0e;\n “Penetration Testing Methodology” 0DAYsecurity.Com, http://www.0daysecurity.com/penetration-testing/enumeration.html. \u0026#x21a9;\u0026#xfe0e;\n “RFC959: FTP: Data Transfer Functions.” World Wide Web Consortium (W3C), https://www.w3.org/Protocols/rfc959/3_DataTransfer.html. \u0026#x21a9;\u0026#xfe0e;\n Thibaut Barrère. “Command Line - How to Recursively Download a Folder via FTP on Linux - Stack Overflow.” Stack Overflow, https://stackoverflow.com/a/113900/578050. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':7,'href':'/notebook/exploitation/search/','title':"Exploits Search",'content':"Exploits Search Offline SearchSploit Periodically update the database with searchsploit -u.  Search vulnerabilities based on a Nmap\u0026rsquo;s XML result.\nsearchsploit --nmap nmap.xml Basic search and copy the exploit the current directory.\nFor more examples, see the manual.\nsearchsploit afd windows local searchsploit -m 39446   Parameters   -u: Check for and install any exploitdb package updates. -m: Copies an exploit to the current working directory. --nmap \u0026lt;xml file\u0026gt;: Checks all results in Nmap\u0026rsquo;s XML output with service version.   MSFconsole For more options, see the manual.\nmsf\u0026gt; search cve:2011 port:135 platform:windows target:XP   Search Keywords   app: Modules that are client or server attacks author: Modules written by this author bid: Modules with a matching Bugtraq ID cve: Modules with a matching CVE ID edb: Modules with a matching Exploit-DB ID name: Modules with a matching descriptive name platform: Modules affecting this platform ref: Modules with a matching ref type: Modules of a specific type (exploit, auxiliary, or post)   Online  Google: \u0026lt;service\u0026gt; \u0026lt;version\u0026gt; exploit Exploit Database Rapid7 Vulnerability \u0026amp; Exploit Database  Vulners Database Sploitus Shodan Exploits PacketStorm  "});index.add({'id':8,'href':'/notebook/tools/','title':"Tools",'content':"Tools fping fping is a program to send ICMP echo probes to network hosts, similar to ping, but much better performing when pinging multiple hosts. fping has a very long history: Roland Schemers did publish a first version of it in 1992 and it has established itself since then as a standard tool for network diagnostics and statistics.\nFTP File Transfer Protocol client.\nTHC Hydra Hydra is a parallelized login cracker which supports numerous protocols to attack. It is very fast and flexible, and new modules are easy to add. This tool makes it possible for researchers and security consultants to show how easy it would be to gain unauthorized access to a system remotely.\nGithub Page\nmasscan This is an Internet-scale port scanner. It can scan the entire Internet in under 6 minutes, transmitting 10 million packets per second, from a single machine.\nIt\u0026rsquo;s input/output is similar to nmap, the most famous port scanner. When in doubt, try one of those features.\nInternally, it uses asynchronous transmissions, similar to port scanners like scanrand, unicornscan, and ZMap. It\u0026rsquo;s more flexible, allowing arbitrary port and address ranges.\nGitHub Page\nMedusa Medusa is intended to be a speedy, massively parallel, modular, login brute-forcer. The goal is to support as many services which allow remote authentication as possible. The author considers following items as some of the key features of this application:\nOfficial Homepage\nMSFConsole The most popular interface to the Metasploit Framework (MSF). It provides an “all-in-one” centralized console and allows you efficient access to virtually all of the options available in the MSF.\nOfficial Homepage\nnbtscan This is a command-line tool that scans for open NETBIOS nameservers on a local or remote TCP/IP network, and this is a first step in finding of open shares. It is based on the functionality of the standard Windows tool nbtstat, but it operates on a range of addresses instead of just one. I wrote this tool because the existing tools either didn\u0026rsquo;t do what I wanted or ran only on the Windows platforms: mine runs on just about everything.\nOfficial Homepage\nNetcat Netcat is a featured networking utility which reads and writes data across network connections, using the TCP/IP protocol.\nIt is designed to be a reliable \u0026ldquo;back-end\u0026rdquo; tool that can be used directly or easily driven by other programs and scripts. At the same time, it is a feature-rich network debugging and exploration tool, since it can create almost any kind of connection you would need and has several interesting built-in capabilities.\nOfficial Homepage\nnetdiscover Active/passive ARP reconnaissance tool.\nDebian\u0026rsquo;s Reference Manual\nNmap Nmap (“Network Mapper”) is an open source tool for network exploration and security auditing. It was designed to rapidly scan large networks, although it works fine against single hosts. Nmap uses raw IP packets in novel ways to determine what hosts are available on the network, what services (application name and version) those hosts are offering, what operating systems (and OS versions) they are running, what type of packet filters/firewalls are in use, and dozens of other characteristics. While Nmap is commonly used for security audits, many systems and network administrators find it useful for routine tasks such as network inventory, managing service upgrade schedules, and monitoring host or service uptime.\nOfficial Homepage\np0f P0f is a tool that utilizes an array of sophisticated, purely passive traffic fingerprinting mechanisms to identify the players behind any incidental TCP/IP communications (often as little as a single normal SYN) without interfering in any way.\nOfficial Homepage\nping Send ICMP ECHO_REQUEST packets to network hosts.\nFreeBSD System Manager\u0026rsquo;s Manual\nSearchSploit Command line search tool for Exploit-DB that also allows you to take a copy of Exploit Database with you, everywhere you go. SearchSploit gives you the power to perform detailed off-line searches through your locally checked-out copy of the repository. This capability is particularly useful for security assessments on segregated or air-gapped networks without Internet access.\nOfficial Homepage\nTelnet User interface to TELNET.\nOfficial Homepage\n"});})();